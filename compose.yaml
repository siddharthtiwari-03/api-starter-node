version: '3.8'

services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: dev
      PORT: 5800
    ports:
      - 5800:5800
    volumes:
      - .:/app
      # This anonymous volume prevents the local node_modules from being
      # mounted over the one built inside the container.
      - /app/node_modules
    # depends_on:
    # redis:
    #   condition: service_healthy
    # un-comment on production level only
    # restart: always
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:5800/health || exit 1"]
    #   interval: 30s
    #   timeout: 5s
    #   retries: 3
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "0.75"
    #       memory: 512M
    #     reservations:
    #       cpus: "0.25"
    #       memory: 256M
    # networks:
    #   - app_net

  redis:
    image: redis:latest
    ports:
    - 6379:6379
    volumes:
    - redis_vol:/data
    restart: always
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    # healthcheck:
    #   test: ["CMD", "redis-cli", "ping"]
    #   interval: 30s
    #   timeout: 3s
    #   retries: 5
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "0.5"
    #       memory: 256M
    # networks:
    #   - app_net

# Enable this to use 'local' mysql database as service
  # mysql:
  #   image: mysql:latest
  #   restart: always
  #   container_name: mysql_container
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=test@123
  #   ports:
  #   - 3306:3306
  #   volumes:
  #   - mysqldb_vol:/var/lib/mysql

# Enable this when working with vector database for AI projects
#   qdrant:
#     image: qdrant/qdrant:latest
#     ports:
#       - "6333:6333"
#       - "6334:6334"
#     volumes:
#       - qdrant_db_vol:/qdrant/storage
#     restart: always
#     environment:
#       # Optional: set Qdrant's storage path if it deviates from the default /qdrant/storage
#       # QDRANT__STORAGE__STORAGE_PATH: /qdrant/storage
#       - QDRANT__SERVICE__GRPC_PORT=6334 # Example environment variables
#       - QDRANT__SERVICE__HTTP_PORT=6333

# Use in conjunction with qdrant service
volumes:
 redis_vol:
#  mysql_db_vol:
#  qdrant_db_vol:

# networks:
#   app_net:
#     driver: bridge
